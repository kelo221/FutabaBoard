package Blueprints
import (
DataModels "backend/ORM"
"fmt"
)
func getFileExtension(fileInfo string) (string) {
parts := strings.Split(fileInfo, " ")
print(parts[len(parts)-1])
return parts[len(parts)-1]
}
templ Empty() {
}

templ post(postTime string, postID string, postTopic string, postCountry string, postText string, extraFlags string) {

      <div class="row">
        <div class="col s12 m6">
          <div class="card blue-grey darken-1">
            <div class="card-content white-text">
              <span class="card-title">{postTopic}</span>
             {postText}
            </div>
               <div class="row">
                 <div class="col s1">{postTime}</div>
                 <div class="col s1">{postID}</div>
                 <div class="col s1">{postCountry}</div>
                 <div class="col s1">{extraFlags}</div>
               </div>
          </div>
        </div>
      </div>
}

templ postImage() {

       <div class="row">
            <div class="col s12 m7">
              <div class="card">
                <div class="card-image">
                  <img src="images/sample-1.jpg"/>
                  <span class="card-title">Card Title</span>
                </div>
                <div class="card-content">
                  <p>I am a very simple card. I am good at containing small bits of information.
                  I am convenient because I require little markup to use effectively.</p>
                </div>
                <div class="card-action">
                  <a href="#">This is a link</a>
                </div>
              </div>
            </div>
          </div>
}

templ ShowAll(thread []DataModels.ThreadPreview) {
<!doctype html>
<html lang="en">
   @htmlHead()
   @style()
   <body>
      @navBar()
      @body(thread)
      @footer()
   </body>
</html>
}
templ htmlHead() {
<head>
   <meta charset="utf-8"/>
   <meta name="viewport" content="width=device-width, initial-scale=1"/>
   <title>Bootstrap demo</title>
   <link href="/country-flags/flags.css" rel="stylesheet"/>
   <script src="https://unpkg.com/htmx.org@1.9.11" integrity="sha384-0gxUXCCR8yv9FM2b+U3FDbsKthCI66oH5IA9fHppQq9DDMHuMauqq1ZHBpJxQ0J0" crossorigin="anonymous"></script>
   <!-- Compiled and minified CSS -->
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css"/>
   <!-- Compiled and minified JavaScript -->
   <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>
</head>
}
templ style() {
<style>
   /*.post {
   max-width: 600px;
   margin: 10px;
   }
   .op {
   margin: 10px;
   }
   .op-img {
   max-height: 300px;
   object-fit: contain;
   }*/
</style>
}
templ navBar() {
<nav>
   <div class="nav-wrapper">
      <a href="#" class="brand-logo">Logo</a>
      <ul id="nav-mobile" class="right hide-on-med-and-down">
         <li><a href="sass.html">Sass</a></li>
         <li><a href="badges.html">Components</a></li>
         <li><a href="collapsible.html">JavaScript</a></li>
      </ul>
   </div>
</nav>
}
templ body(thread []DataModels.ThreadPreview) {
for _, content := range thread {
<!-- postTime String, postID int, postTopic String, postCountry String, postText String, extraFlags String -->
 @post(content.UnixTime.String(), strconv.FormatInt(content.ID, 10), content.Topic, content.Country, content.TextRaw, content.ExtraFlags)
<div class="card bg-secondary shadow-lg " style="margin: 0px 10px 10px 10px;">
   <div class="container text-center">
      <div>
         <div class="card-body">
            <div class="card op shadow-lg">
               <div class="card-header bg-light">
                  <div class="container">
                     <div class="row">
                        <div class="col-sm">
                           {content.UnixTime.String()}
                           {strconv.FormatInt(content.ID, 10)}
                        </div>
                        <div class="col-sm">
                           {content.Topic}
                        </div>
                        <div class="col-sm">
                           <i class={fmt.Sprintf("flag %s", content.Country) }></i>
                        </div>
                     </div>
                  </div>
               </div>
               if content.PostImage.ImageHash != "" {
               <a target="_blank" href={templ.SafeURL (fmt.Sprintf("http://127.0.0.1:8000/ThreadContent/%d/%s%s", content.ID, content.PostImage.ImageHash, getFileExtension(content.PostImage.ImageInfo) ))}>
               <img class="op-img" src={fmt.Sprintf("http://127.0.0.1:8000/ThreadContent/%d/%s_small.png", content.ID, content.PostImage.ImageHash )} alt="Card image cap" />
               </a>
               <!--   <img class="op-img" src={fmt.Sprintf("http://127.0.0.1:8000/ThreadContent/%d/%s%s", content.ID, content.PostImage.ImageHash, getFileExtension(content.PostImage.ImageInfo) )} alt="Card image cap" /> -->
               }
               <div class="card-body">
                  <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
               </div>
            </div>
         </div>
         <div class="container text-center">
            <div class="row row-cols-3">
               for _, post := range content.Posts {
               <div class="card-body" >
                  <div class="card post shadow-lg" >
                     <div class="card-header bg-light"> USER INFO HERE </div>
                     <div class="card-body">
                        <h5 class="card-title"> {post.TextRaw} </h5>
                        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                     </div>
                  </div>
               </div>
               }
            </div>
         </div>
      </div>
   </div>
   <div class="card-footer bg-light">
      <div class="container">
         <div class="row">
            <div class="col align-self-start">
               {strconv.Itoa(content.PostCount)}
            </div>
            <div class="col align-self-center">
               {content.LastBump.String()}
            </div>
            <div class="col align-self-end">
               <button>Open</button>
            </div>
         </div>
      </div>
   </div>
</div>
}
}
templ footer() {
<nav aria-label="Page navigation example">
   <ul class="pagination justify-content-center">
      <li class="page-item active"><a class="page-link" href="#">1</a></li>
      <li class="page-item"><a class="page-link" href="#">2</a></li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
   </ul>
</nav>
}
